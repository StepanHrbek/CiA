{$G+}
{ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß}
unit vga13h; {Procedury pro grafiku v grafickem modu 13h (320x200x8bitu)}
{ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß}
interface
{ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß}
uses syst;
{ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß}
function  IsVga:boolean;
procedure SetMode(n:word);
procedure cls(n:byte; where:word);
procedure pset(x:word; y:byte; c:byte; where:word);
procedure pal(c,r,g,b:byte);
procedure WaitForTrace;
procedure Quad(x:word; y:byte; w,h:word; c:byte; where:word);
procedure QuadP(x:word; y:byte; w,h:word; c:byte; where:word);
procedure EdgeQuad(x:word; y:byte; w,h:word; c:byte; where:word);
procedure EdgeQuadP(x:word; y:byte; w,h:word; c:byte; where:word);
procedure EdgeButt(x:word; y:byte; w,h:word; c1,c2:byte; where:word);
procedure Butt(x:word; y:byte; w,h:word; c1,c2,c3,t:byte; where:word);
procedure fw8(s:string; x:word; y,c1,c2:byte; where:word);
procedure fw4(s:string; x:word; y,c1,c2:byte; where:word);
{ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß}
const
 scrwidth :word=320;
 scrheight:word=200;
 _PalReg    =$03C0;
 _MiscOutReg=$03C2;
 _SeqAddrReg=$03C4;
 _GFXAddrReg=$03CE;
 _PELAddrReg=$03C8;
 _CRTCReg   =$03D4;
 _CRTIntReg =$03D5;
 _FeatureReg=$03DA;
 mode3    =3;
 mode13   =$13;
 mys:array[0..9,0..7] of byte=(
 ($1D,$00,$00,$00,$00,$00,$00,$00),
 ($1E,$1C,$00,$00,$00,$00,$00,$00),
 ($1F,$1E,$1B,$00,$00,$00,$00,$00),
 ($1E,$1F,$1C,$1A,$00,$00,$00,$00),
 ($1E,$1E,$1D,$1D,$18,$00,$00,$00),
 ($1D,$1D,$1C,$1B,$19,$16,$00,$00),
 ($1E,$1E,$1B,$18,$17,$15,$14,$00),
 ($1D,$1C,$18,$00,$00,$00,$00,$00),
 ($1C,$19,$00,$00,$00,$00,$00,$00),
 ($1A,$00,$00,$00,$00,$00,$00,$00));
 font8:array[0..2047] of byte=(
 $00,$00,$00,$00,$00,$00,$00,$00,$7C,$82,$AA,$82,$BA,$82,$7C,$00,
 $7C,$FE,$D6,$FE,$BA,$C6,$7C,$00,$00,$6C,$FE,$FE,$7C,$38,$10,$00,
 $00,$18,$3C,$7E,$7E,$3C,$18,$00,$3C,$7E,$18,$7E,$7E,$3C,$18,$7C,
 $00,$08,$1C,$3E,$7F,$3E,$1C,$3E,$00,$00,$00,$18,$3C,$18,$00,$00,
 $FF,$FF,$FF,$E7,$C3,$E7,$FF,$FF,$00,$00,$3C,$66,$66,$3C,$00,$00,
 $FF,$FF,$C3,$99,$99,$C3,$FF,$FF,$0F,$07,$3F,$6D,$6C,$6C,$38,$00,
 $3C,$66,$66,$66,$3C,$18,$7E,$18,$1F,$19,$1F,$18,$18,$38,$78,$30,
 $3F,$21,$3F,$21,$21,$E7,$C6,$00,$00,$92,$54,$38,$FE,$38,$54,$92,
 $80,$E0,$F8,$FE,$F8,$E0,$80,$00,$01,$07,$1F,$7F,$1F,$07,$01,$00,
 $18,$3C,$7E,$18,$18,$7E,$3C,$18,$36,$36,$36,$36,$36,$00,$36,$00,
 $3E,$6A,$6A,$3A,$0A,$0A,$0A,$00,$3E,$60,$3C,$66,$3C,$06,$7C,$00,
 $00,$00,$00,$3C,$7E,$7E,$3C,$00,$18,$3C,$7E,$18,$7E,$3C,$18,$FF,
 $18,$3C,$7E,$18,$18,$18,$18,$00,$18,$18,$18,$18,$7E,$3C,$18,$00,
 $00,$08,$0C,$7E,$7E,$0C,$08,$00,$00,$10,$30,$7E,$7E,$30,$10,$00,
 $00,$00,$00,$40,$40,$7C,$00,$00,$00,$00,$24,$66,$FF,$66,$24,$00,
 $00,$00,$18,$3C,$7E,$FF,$00,$00,$00,$00,$FF,$7E,$3C,$18,$00,$00,
 $00,$00,$00,$00,$00,$00,$00,$00,$18,$18,$18,$18,$18,$00,$18,$00,
 $36,$36,$14,$00,$00,$00,$00,$00,$24,$7E,$7E,$24,$7E,$7E,$24,$00,
 $18,$3E,$60,$3C,$06,$7C,$18,$00,$62,$66,$0C,$18,$30,$66,$46,$00,
 $10,$28,$28,$32,$4C,$5C,$32,$00,$18,$18,$30,$00,$00,$00,$00,$00,
 $0C,$18,$18,$18,$18,$18,$0C,$00,$30,$18,$18,$18,$18,$18,$30,$00,
 $00,$00,$24,$18,$7E,$18,$24,$00,$00,$00,$18,$18,$7E,$18,$18,$00,
 $00,$00,$00,$00,$00,$18,$18,$30,$00,$00,$00,$00,$3C,$00,$00,$00,
 $00,$00,$00,$00,$00,$18,$18,$00,$02,$06,$0C,$18,$30,$60,$40,$00,
 $3C,$66,$6E,$76,$66,$66,$3C,$00,$38,$18,$18,$18,$18,$18,$3C,$00,
 $7C,$06,$06,$3C,$60,$60,$7E,$00,$3C,$06,$06,$0C,$06,$06,$3C,$00,
 $66,$66,$66,$3E,$06,$06,$06,$00,$7E,$60,$60,$7C,$06,$06,$7C,$00,
 $3C,$60,$60,$7C,$66,$66,$3C,$00,$7C,$06,$06,$06,$06,$06,$06,$00,
 $3C,$66,$66,$3C,$66,$66,$3C,$00,$3C,$66,$66,$3E,$06,$06,$3C,$00,
 $00,$18,$18,$00,$18,$18,$00,$00,$00,$18,$18,$00,$18,$18,$30,$00,
 $0C,$18,$30,$60,$30,$18,$0C,$00,$00,$00,$7E,$00,$7E,$00,$00,$00,
 $30,$18,$0C,$06,$0C,$18,$30,$00,$3C,$66,$06,$1C,$18,$00,$18,$00,
 $3C,$42,$5A,$5A,$4C,$40,$3E,$00,$3C,$66,$66,$66,$7E,$66,$66,$00,
 $7C,$66,$66,$7C,$66,$66,$7C,$00,$3E,$60,$60,$60,$60,$60,$3E,$00,
 $7C,$66,$66,$66,$66,$66,$7C,$00,$7E,$60,$60,$7E,$60,$60,$7E,$00,
 $7E,$60,$60,$7E,$60,$60,$60,$00,$3E,$60,$60,$6E,$66,$66,$3C,$00,
 $66,$66,$66,$7E,$66,$66,$66,$00,$3C,$18,$18,$18,$18,$18,$3C,$00,
 $3C,$18,$18,$18,$18,$18,$18,$30,$66,$6C,$78,$70,$78,$6C,$66,$00,
 $60,$60,$60,$60,$60,$60,$7E,$00,$3E,$6B,$6B,$6B,$63,$63,$63,$00,
 $66,$66,$76,$7E,$6E,$66,$66,$00,$3C,$66,$66,$66,$66,$66,$3C,$00,
 $7C,$66,$66,$7C,$60,$60,$60,$00,$3C,$66,$66,$66,$66,$6E,$3C,$06,
 $7C,$66,$66,$7C,$78,$6C,$66,$00,$3E,$60,$60,$3C,$06,$06,$7C,$00,
 $7E,$18,$18,$18,$18,$18,$18,$00,$66,$66,$66,$66,$66,$66,$3C,$00,
 $66,$66,$66,$66,$66,$3C,$18,$00,$63,$63,$63,$6B,$6B,$6B,$3E,$00,
 $42,$66,$3C,$18,$3C,$66,$42,$00,$66,$66,$66,$3C,$18,$18,$18,$00,
 $7E,$06,$0C,$18,$30,$60,$7E,$00,$1C,$18,$18,$18,$18,$18,$1C,$00,
 $40,$60,$30,$18,$0C,$06,$02,$00,$38,$18,$18,$18,$18,$18,$38,$00,
 $18,$34,$62,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$7E,
 $18,$18,$0C,$00,$00,$00,$00,$00,$00,$00,$3C,$06,$3E,$66,$3E,$00,
 $60,$60,$7C,$66,$66,$66,$7C,$00,$00,$00,$3C,$60,$60,$60,$3C,$00,
 $06,$06,$3E,$66,$66,$66,$3E,$00,$00,$00,$3C,$66,$7E,$60,$3E,$00,
 $0C,$18,$18,$3C,$18,$18,$18,$00,$00,$00,$3E,$66,$66,$3E,$06,$3C,
 $60,$60,$7C,$66,$66,$66,$66,$00,$00,$18,$00,$18,$18,$18,$18,$00,
 $00,$18,$00,$18,$18,$18,$18,$30,$60,$60,$64,$6C,$78,$78,$6C,$00,
 $18,$18,$18,$18,$18,$18,$18,$00,$00,$00,$7E,$6B,$6B,$63,$63,$00,
 $00,$00,$7C,$66,$66,$66,$66,$00,$00,$00,$3C,$66,$66,$66,$3C,$00,
 $00,$00,$7C,$66,$66,$66,$7C,$60,$00,$00,$3E,$66,$66,$66,$3E,$06,
 $00,$00,$3C,$60,$60,$60,$60,$00,$00,$00,$1E,$30,$1C,$06,$3C,$00,
 $18,$18,$3C,$18,$18,$18,$0C,$00,$00,$00,$66,$66,$66,$66,$3E,$00,
 $00,$00,$66,$66,$66,$3C,$18,$00,$00,$00,$63,$63,$6B,$6B,$3E,$00,
 $00,$00,$66,$3C,$18,$3C,$66,$00,$00,$00,$66,$66,$66,$3E,$06,$7C,
 $00,$00,$3E,$06,$1C,$30,$3E,$00,$0C,$18,$18,$30,$18,$18,$0C,$00,
 $18,$18,$18,$00,$18,$18,$18,$00,$30,$18,$18,$0C,$18,$18,$30,$00,
 $36,$6C,$00,$00,$00,$00,$00,$00,$00,$00,$18,$24,$66,$66,$7E,$00,
 $14,$3E,$60,$60,$60,$60,$3E,$00,$00,$00,$00,$00,$00,$00,$00,$00,
 $0C,$18,$3C,$66,$7E,$60,$3E,$00,$0A,$06,$06,$3E,$66,$66,$3E,$00,
 $36,$00,$3C,$06,$3E,$66,$3E,$00,$28,$7C,$66,$66,$66,$66,$7C,$00,
 $2C,$7E,$18,$18,$18,$18,$18,$00,$28,$10,$3C,$60,$60,$60,$3C,$00,
 $24,$18,$3C,$66,$7E,$60,$3C,$00,$14,$7E,$60,$7E,$60,$60,$7E,$00,
 $70,$00,$3C,$66,$7E,$60,$3E,$00,$08,$3C,$18,$18,$18,$18,$3C,$00,
 $3C,$42,$18,$18,$18,$18,$18,$00,$70,$00,$18,$18,$18,$18,$18,$00,
 $66,$00,$3C,$66,$7E,$66,$66,$00,$0E,$3C,$66,$7E,$66,$66,$66,$00,
 $0C,$7E,$60,$7E,$60,$60,$7E,$00,$28,$10,$7C,$0C,$38,$60,$7C,$00,
 $28,$7E,$06,$0C,$18,$30,$7E,$00,$3C,$42,$3C,$66,$66,$66,$3C,$00,
 $00,$66,$00,$3C,$66,$66,$3C,$00,$0E,$3C,$66,$66,$66,$66,$3C,$00,
 $18,$18,$66,$66,$66,$66,$3E,$00,$07,$60,$63,$63,$63,$63,$3E,$00,
 $0C,$18,$66,$66,$66,$3E,$06,$7C,$66,$00,$3C,$66,$66,$66,$3C,$00,
 $66,$00,$66,$66,$66,$66,$3C,$00,$14,$3E,$60,$3C,$06,$06,$7C,$00,
 $06,$08,$1C,$08,$28,$50,$2F,$00,$0E,$60,$66,$3C,$18,$18,$18,$00,
 $28,$7C,$66,$7C,$78,$6C,$66,$00,$14,$18,$3C,$18,$18,$18,$0C,$00,
 $0C,$18,$3C,$06,$3E,$66,$3E,$00,$0C,$18,$00,$18,$18,$18,$18,$00,
 $0C,$18,$3C,$66,$66,$66,$3C,$00,$0E,$00,$66,$66,$66,$66,$3E,$00,
 $28,$10,$7C,$66,$66,$66,$66,$00,$7E,$00,$66,$76,$7E,$6E,$66,$00,
 $18,$5A,$66,$66,$66,$66,$3C,$00,$3C,$66,$66,$3C,$00,$7E,$00,$00,
 $28,$10,$3C,$60,$38,$0C,$78,$00,$28,$10,$3C,$60,$60,$60,$60,$00,
 $00,$00,$00,$78,$0C,$0C,$0C,$00,$40,$C4,$48,$54,$22,$44,$08,$0E,
 $40,$C4,$48,$52,$2A,$4E,$02,$00,$18,$00,$18,$18,$18,$18,$18,$00,
 $00,$00,$12,$24,$48,$24,$12,$00,$00,$00,$48,$24,$12,$24,$48,$00,
 $22,$88,$22,$88,$22,$88,$22,$88,$AA,$55,$AA,$55,$AA,$55,$AA,$55,
 $77,$DD,$77,$DD,$77,$DD,$77,$DD,$18,$18,$18,$18,$18,$18,$18,$18,
 $18,$18,$18,$F8,$F8,$18,$18,$18,$18,$18,$F8,$18,$18,$F8,$18,$18,
 $24,$24,$24,$E4,$E4,$24,$24,$24,$00,$00,$00,$FC,$FC,$24,$24,$24,
 $00,$00,$F8,$18,$18,$F8,$18,$18,$24,$24,$E4,$04,$04,$E4,$24,$24,
 $24,$24,$24,$24,$24,$24,$24,$24,$00,$00,$FC,$04,$04,$E4,$24,$24,
 $24,$24,$E4,$04,$04,$FC,$00,$00,$24,$24,$24,$FC,$FC,$00,$00,$00,
 $18,$18,$F8,$18,$18,$F8,$00,$00,$00,$00,$00,$F8,$F8,$18,$18,$18,
 $18,$18,$18,$1F,$1F,$00,$00,$00,$18,$18,$18,$FF,$FF,$00,$00,$00,
 $00,$00,$00,$FF,$FF,$18,$18,$18,$18,$18,$18,$1F,$1F,$18,$18,$18,
 $00,$00,$00,$FF,$FF,$00,$00,$00,$18,$18,$18,$FF,$FF,$18,$18,$18,
 $18,$18,$1F,$18,$18,$1F,$18,$18,$24,$24,$24,$27,$27,$24,$24,$24,
 $24,$24,$27,$20,$20,$3F,$00,$00,$00,$00,$3F,$20,$20,$27,$24,$24,
 $24,$24,$E7,$00,$00,$FF,$00,$00,$00,$00,$FF,$00,$00,$E7,$24,$24,
 $24,$24,$27,$20,$20,$27,$24,$24,$00,$00,$FF,$00,$00,$FF,$00,$00,
 $24,$24,$E7,$00,$00,$E7,$24,$24,$18,$18,$FF,$00,$00,$FF,$00,$00,
 $18,$18,$18,$FF,$FF,$00,$00,$00,$00,$00,$FF,$00,$00,$FF,$18,$18,
 $00,$00,$00,$FF,$FF,$24,$24,$24,$24,$24,$24,$3F,$3F,$00,$00,$00,
 $18,$18,$1F,$18,$18,$1F,$00,$00,$00,$00,$1F,$18,$18,$1F,$18,$18,
 $00,$00,$00,$3F,$3F,$24,$24,$24,$24,$24,$24,$FF,$FF,$24,$24,$24,
 $18,$18,$FF,$18,$18,$FF,$18,$18,$18,$18,$18,$F8,$F8,$00,$00,$00,
 $00,$00,$00,$1F,$1F,$18,$18,$18,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,
 $00,$00,$00,$00,$FF,$FF,$FF,$FF,$F0,$F0,$F0,$F0,$F0,$F0,$F0,$F0,
 $0F,$0F,$0F,$0F,$0F,$0F,$0F,$0F,$FF,$FF,$FF,$FF,$00,$00,$00,$00,
 $00,$00,$32,$5C,$48,$5C,$32,$00,$3C,$66,$66,$6C,$66,$66,$6C,$60,
 $7E,$66,$60,$60,$60,$60,$60,$00,$00,$7E,$24,$24,$24,$24,$24,$00,
 $7E,$62,$30,$18,$30,$62,$7E,$00,$00,$00,$3E,$6C,$6C,$6C,$38,$00,
 $00,$66,$66,$66,$66,$7C,$60,$C0,$00,$23,$56,$1C,$18,$18,$18,$00,
 $7E,$18,$3C,$66,$3C,$18,$7E,$00,$18,$24,$66,$7E,$66,$24,$18,$00,
 $00,$3C,$66,$46,$2E,$2C,$6E,$00,$0E,$18,$0C,$3E,$66,$66,$3C,$00,
 $00,$00,$24,$5A,$5A,$5A,$24,$00,$00,$02,$24,$5A,$5A,$5A,$24,$40,
 $00,$00,$3E,$60,$7C,$60,$3E,$00,$00,$3C,$66,$66,$66,$66,$66,$00,
 $00,$7E,$00,$7E,$00,$7E,$00,$00,$00,$18,$18,$7E,$18,$18,$7E,$00,
 $00,$18,$0C,$06,$0C,$18,$00,$7E,$00,$18,$30,$60,$30,$18,$00,$7E,
 $0C,$1E,$1A,$18,$18,$18,$18,$18,$18,$18,$18,$18,$18,$58,$78,$30,
 $18,$18,$00,$7E,$00,$18,$18,$00,$00,$32,$4C,$00,$32,$4C,$00,$00,
 $18,$24,$18,$00,$00,$00,$00,$00,$00,$00,$00,$18,$18,$00,$00,$00,
 $00,$00,$00,$00,$18,$00,$00,$00,$1F,$10,$D0,$50,$50,$20,$20,$20,
 $60,$50,$50,$50,$00,$00,$00,$00,$60,$10,$20,$70,$00,$00,$00,$00,
 $00,$00,$3C,$3C,$3C,$3C,$00,$00,$00,$00,$00,$10,$00,$00,$00,$00);
 font4:array[0..2047] of byte=(
 $00,$00,$00,$00,$00,$00,$00,$00,$00,$A0,$00,$E0,$00,$00,$00,$00,
 $60,$F0,$50,$F0,$50,$B0,$F0,$60,$00,$A0,$E0,$E0,$40,$00,$00,$00,
 $00,$40,$E0,$E0,$40,$00,$00,$00,$00,$40,$E0,$40,$C0,$00,$00,$00,
 $40,$E0,$E0,$40,$E0,$00,$00,$00,$00,$00,$00,$60,$60,$00,$00,$00,
 $F0,$F0,$F0,$90,$90,$F0,$F0,$F0,$00,$00,$F0,$90,$90,$F0,$00,$00,
 $F0,$F0,$B0,$50,$B0,$F0,$F0,$F0,$00,$60,$20,$40,$A0,$A0,$40,$00,
 $40,$A0,$A0,$40,$E0,$40,$00,$00,$60,$40,$60,$40,$40,$C0,$C0,$00,
 $70,$50,$70,$50,$50,$D0,$D0,$00,$A0,$40,$E0,$40,$E0,$40,$A0,$00,
 $00,$80,$C0,$E0,$C0,$80,$00,$00,$00,$20,$60,$E0,$60,$20,$00,$00,
 $60,$F0,$60,$60,$F0,$60,$00,$00,$A0,$A0,$A0,$A0,$00,$A0,$00,$00,
 $70,$B0,$B0,$70,$30,$30,$00,$00,$60,$80,$C0,$A0,$60,$20,$C0,$00,
 $00,$00,$00,$E0,$E0,$00,$00,$00,$40,$E0,$40,$E0,$40,$E0,$00,$00,
 $40,$E0,$40,$40,$40,$40,$00,$00,$40,$40,$40,$40,$E0,$40,$00,$00,
 $00,$00,$20,$F0,$20,$00,$00,$00,$00,$00,$40,$F0,$40,$00,$00,$00,
 $00,$00,$40,$70,$00,$00,$00,$00,$00,$00,$90,$F0,$90,$00,$00,$00,
 $00,$00,$60,$F0,$00,$00,$00,$00,$00,$00,$00,$F0,$60,$00,$00,$00,
 $00,$00,$00,$00,$00,$00,$00,$00,$40,$40,$00,$40,$00,$00,$00,$00,
 $A0,$A0,$00,$00,$00,$00,$00,$00,$A0,$E0,$A0,$E0,$A0,$00,$00,$00,
 $40,$E0,$40,$E0,$40,$00,$00,$00,$A0,$60,$C0,$A0,$00,$00,$00,$00,
 $80,$60,$C0,$E0,$00,$00,$00,$00,$40,$40,$00,$00,$00,$00,$00,$00,
 $20,$40,$40,$40,$20,$00,$00,$00,$40,$20,$20,$20,$40,$00,$00,$00,
 $A0,$40,$E0,$40,$A0,$00,$00,$00,$40,$40,$E0,$40,$40,$00,$00,$00,
 $00,$00,$00,$40,$80,$00,$00,$00,$00,$00,$E0,$00,$00,$00,$00,$00,
 $00,$00,$00,$00,$40,$00,$00,$00,$20,$20,$40,$40,$80,$80,$00,$00,
 $E0,$A0,$A0,$A0,$E0,$00,$00,$00,$60,$20,$20,$20,$20,$00,$00,$00,
 $E0,$20,$E0,$80,$E0,$00,$00,$00,$E0,$20,$E0,$20,$E0,$00,$00,$00,
 $A0,$A0,$E0,$20,$20,$00,$00,$00,$E0,$80,$E0,$20,$E0,$00,$00,$00,
 $E0,$80,$E0,$A0,$E0,$00,$00,$00,$E0,$20,$20,$20,$20,$00,$00,$00,
 $E0,$A0,$E0,$A0,$E0,$00,$00,$00,$E0,$A0,$E0,$20,$E0,$00,$00,$00,
 $00,$40,$00,$40,$00,$00,$00,$00,$00,$40,$00,$40,$80,$00,$00,$00,
 $20,$40,$80,$40,$20,$00,$00,$00,$00,$E0,$00,$E0,$00,$00,$00,$00,
 $80,$40,$20,$40,$80,$00,$00,$00,$C0,$20,$40,$00,$40,$00,$00,$00,
 $E0,$A0,$A0,$80,$E0,$00,$00,$00,$40,$A0,$E0,$A0,$A0,$00,$00,$00,
 $C0,$A0,$C0,$A0,$C0,$00,$00,$00,$60,$80,$80,$80,$60,$00,$00,$00,
 $C0,$A0,$A0,$A0,$C0,$00,$00,$00,$E0,$80,$E0,$80,$E0,$00,$00,$00,
 $E0,$80,$E0,$80,$80,$00,$00,$00,$E0,$80,$A0,$A0,$E0,$00,$00,$00,
 $A0,$A0,$E0,$A0,$A0,$00,$00,$00,$E0,$40,$40,$40,$E0,$00,$00,$00,
 $20,$20,$20,$A0,$40,$00,$00,$00,$A0,$A0,$C0,$A0,$A0,$00,$00,$00,
 $80,$80,$80,$80,$E0,$00,$00,$00,$A0,$E0,$E0,$A0,$A0,$00,$00,$00,
 $C0,$A0,$A0,$A0,$A0,$00,$00,$00,$40,$A0,$A0,$A0,$40,$00,$00,$00,
 $E0,$A0,$E0,$80,$80,$00,$00,$00,$40,$A0,$A0,$E0,$60,$00,$00,$00,
 $C0,$A0,$C0,$A0,$A0,$00,$00,$00,$60,$80,$40,$20,$C0,$00,$00,$00,
 $E0,$40,$40,$40,$40,$00,$00,$00,$A0,$A0,$A0,$A0,$E0,$00,$00,$00,
 $A0,$A0,$A0,$40,$40,$00,$00,$00,$A0,$A0,$E0,$E0,$A0,$00,$00,$00,
 $A0,$A0,$40,$A0,$A0,$00,$00,$00,$A0,$A0,$E0,$40,$40,$00,$00,$00,
 $E0,$20,$40,$80,$E0,$00,$00,$00,$60,$40,$40,$40,$60,$00,$00,$00,
 $80,$80,$40,$40,$20,$20,$00,$00,$60,$20,$20,$20,$60,$00,$00,$00,
 $40,$A0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$E0,$00,$00,$00,$00,
 $80,$40,$00,$00,$00,$00,$00,$00,$00,$40,$20,$E0,$60,$00,$00,$00,
 $80,$E0,$A0,$A0,$E0,$00,$00,$00,$00,$E0,$80,$80,$E0,$00,$00,$00,
 $20,$E0,$A0,$A0,$E0,$00,$00,$00,$00,$40,$A0,$C0,$60,$00,$00,$00,
 $20,$40,$60,$40,$40,$00,$00,$00,$00,$60,$A0,$60,$20,$C0,$00,$00,
 $80,$E0,$A0,$A0,$A0,$00,$00,$00,$40,$00,$40,$40,$40,$00,$00,$00,
 $40,$00,$40,$40,$40,$80,$00,$00,$80,$A0,$C0,$A0,$A0,$00,$00,$00,
 $40,$40,$40,$40,$20,$00,$00,$00,$00,$E0,$E0,$A0,$A0,$00,$00,$00,
 $00,$40,$A0,$A0,$A0,$00,$00,$00,$00,$E0,$A0,$A0,$E0,$00,$00,$00,
 $00,$C0,$A0,$A0,$C0,$80,$00,$00,$00,$60,$A0,$A0,$60,$20,$00,$00,
 $00,$60,$80,$80,$80,$00,$00,$00,$00,$60,$C0,$60,$C0,$00,$00,$00,
 $40,$60,$40,$40,$20,$00,$00,$00,$00,$A0,$A0,$A0,$E0,$00,$00,$00,
 $00,$A0,$A0,$A0,$40,$00,$00,$00,$00,$A0,$A0,$E0,$A0,$00,$00,$00,
 $00,$A0,$40,$A0,$A0,$00,$00,$00,$00,$A0,$A0,$60,$20,$C0,$00,$00,
 $00,$E0,$60,$80,$E0,$00,$00,$00,$60,$C0,$40,$60,$00,$00,$00,$00,
 $40,$40,$40,$40,$00,$00,$00,$00,$C0,$60,$40,$C0,$00,$00,$00,$00,
 $E0,$00,$00,$00,$00,$00,$00,$00,$00,$40,$A0,$E0,$00,$00,$00,$00,
 $A0,$E0,$80,$80,$E0,$00,$00,$00,$A0,$00,$A0,$A0,$60,$00,$00,$00,
 $20,$40,$A0,$C0,$60,$00,$00,$00,$40,$20,$60,$A0,$60,$00,$00,$00,
 $A0,$40,$20,$E0,$60,$00,$00,$00,$A0,$C0,$A0,$A0,$C0,$00,$00,$00,
 $A0,$40,$E0,$40,$40,$00,$00,$00,$A0,$40,$E0,$80,$E0,$00,$00,$00,
 $A0,$40,$A0,$C0,$60,$00,$00,$00,$A0,$E0,$C0,$80,$E0,$00,$00,$00,
 $00,$20,$60,$C0,$60,$00,$00,$00,$00,$20,$40,$40,$40,$00,$00,$00,
 $00,$E0,$00,$40,$40,$00,$00,$00,$00,$C0,$00,$40,$40,$00,$00,$00,
 $A0,$40,$A0,$E0,$A0,$00,$00,$00,$20,$40,$A0,$E0,$A0,$00,$00,$00,
 $A0,$E0,$C0,$80,$E0,$00,$00,$00,$00,$A0,$E0,$40,$E0,$00,$00,$00,
 $A0,$E0,$20,$40,$E0,$00,$00,$00,$E0,$00,$40,$A0,$40,$00,$00,$00,
 $A0,$00,$40,$A0,$40,$00,$00,$00,$60,$00,$40,$A0,$40,$00,$00,$00,
 $00,$40,$00,$A0,$60,$00,$00,$00,$20,$80,$A0,$A0,$E0,$00,$00,$00,
 $60,$00,$A0,$60,$20,$C0,$00,$00,$A0,$40,$A0,$A0,$40,$00,$00,$00,
 $A0,$00,$A0,$A0,$E0,$00,$00,$00,$A0,$60,$C0,$20,$C0,$00,$00,$00,
 $A0,$C0,$80,$80,$E0,$00,$00,$00,$60,$00,$A0,$40,$40,$00,$00,$00,
 $A0,$C0,$A0,$C0,$A0,$00,$00,$00,$A0,$40,$E0,$40,$20,$00,$00,$00,
 $20,$40,$20,$E0,$60,$00,$00,$00,$20,$40,$00,$40,$40,$00,$00,$00,
 $60,$00,$E0,$A0,$E0,$00,$00,$00,$20,$40,$00,$A0,$60,$00,$00,$00,
 $A0,$40,$C0,$A0,$A0,$00,$00,$00,$A0,$E0,$A0,$A0,$A0,$00,$00,$00,
 $40,$00,$A0,$A0,$E0,$00,$00,$00,$E0,$E0,$A0,$A0,$E0,$00,$00,$00,
 $00,$A0,$40,$20,$40,$00,$00,$00,$00,$A0,$60,$40,$40,$00,$00,$00,
 $00,$00,$C0,$40,$00,$00,$00,$00,$40,$80,$00,$40,$00,$00,$00,$00,
 $40,$80,$00,$C0,$00,$00,$00,$00,$00,$60,$00,$60,$60,$00,$00,$00,
 $00,$60,$C0,$60,$00,$00,$00,$00,$00,$C0,$60,$C0,$00,$00,$00,$00,
 $20,$80,$20,$80,$20,$80,$20,$80,$A0,$50,$A0,$50,$A0,$50,$A0,$50,
 $70,$D0,$70,$D0,$70,$D0,$70,$D0,$40,$40,$40,$40,$40,$40,$40,$40,
 $40,$40,$40,$40,$C0,$40,$40,$40,$40,$40,$40,$C0,$40,$C0,$40,$40,
 $60,$60,$60,$60,$E0,$60,$60,$60,$00,$00,$00,$00,$E0,$60,$60,$60,
 $00,$00,$00,$C0,$40,$C0,$40,$40,$60,$60,$60,$E0,$20,$E0,$60,$60,
 $60,$60,$60,$60,$60,$60,$60,$60,$00,$00,$00,$E0,$60,$E0,$60,$60,
 $60,$60,$60,$E0,$60,$E0,$00,$00,$60,$60,$60,$60,$E0,$00,$00,$00,
 $40,$40,$40,$C0,$40,$C0,$00,$00,$00,$00,$00,$00,$C0,$40,$40,$40,
 $40,$40,$40,$40,$7F,$00,$00,$00,$40,$40,$40,$40,$FF,$00,$00,$00,
 $00,$00,$00,$00,$FF,$40,$40,$40,$40,$40,$40,$40,$7F,$40,$40,$40,
 $00,$00,$00,$00,$FF,$00,$00,$00,$40,$40,$40,$40,$FF,$40,$40,$40,
 $40,$40,$40,$7F,$40,$7F,$40,$40,$60,$60,$60,$60,$7F,$60,$60,$60,
 $60,$60,$60,$7F,$60,$7F,$00,$00,$00,$00,$00,$7F,$60,$7F,$60,$60,
 $60,$60,$60,$FF,$60,$FF,$00,$00,$00,$00,$00,$FF,$60,$FF,$60,$60,
 $60,$60,$60,$7F,$60,$7F,$60,$60,$00,$00,$00,$FF,$00,$FF,$00,$00,
 $60,$60,$60,$FF,$60,$FF,$60,$60,$40,$40,$40,$FF,$00,$FF,$00,$00,
 $40,$40,$40,$40,$FF,$00,$00,$00,$00,$00,$00,$FF,$00,$FF,$40,$40,
 $00,$00,$00,$00,$FF,$60,$60,$60,$60,$60,$60,$60,$7F,$00,$00,$00,
 $40,$40,$40,$7F,$40,$7F,$00,$00,$00,$00,$00,$7F,$40,$7F,$40,$40,
 $00,$00,$00,$00,$7F,$60,$60,$60,$60,$60,$60,$60,$FF,$60,$60,$60,
 $40,$40,$40,$FF,$40,$FF,$40,$40,$40,$40,$40,$40,$C0,$00,$00,$00,
 $00,$00,$00,$00,$7F,$40,$40,$40,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,
 $00,$00,$00,$00,$FF,$FF,$FF,$FF,$C0,$C0,$C0,$C0,$C0,$C0,$C0,$C0,
 $3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$FF,$FF,$FF,$FF,$00,$00,$00,$00,
 $D0,$A0,$D0,$00,$00,$00,$00,$00,$60,$90,$A0,$90,$A0,$00,$00,$00,
 $E0,$A0,$80,$80,$00,$00,$00,$00,$F0,$A0,$A0,$A0,$00,$00,$00,$00,
 $E0,$80,$40,$80,$E0,$00,$00,$00,$00,$70,$A0,$A0,$40,$00,$00,$00,
 $00,$A0,$A0,$C0,$80,$00,$00,$00,$00,$90,$60,$40,$20,$00,$00,$00,
 $E0,$40,$A0,$40,$E0,$00,$00,$00,$40,$A0,$E0,$A0,$40,$00,$00,$00,
 $40,$A0,$40,$40,$E0,$00,$00,$00,$60,$80,$40,$A0,$40,$00,$00,$00,
 $00,$50,$A8,$A8,$50,$00,$00,$00,$08,$50,$A8,$A8,$50,$80,$00,$00,
 $00,$60,$80,$E0,$80,$60,$00,$00,$00,$60,$90,$90,$90,$00,$00,$00,
 $F0,$00,$F0,$00,$F0,$00,$00,$00,$40,$E0,$40,$00,$E0,$00,$00,$00,
 $00,$40,$20,$40,$00,$E0,$00,$00,$00,$40,$80,$40,$00,$E0,$00,$00,
 $00,$20,$50,$40,$40,$40,$40,$40,$40,$40,$20,$A0,$40,$00,$00,$00,
 $40,$00,$E0,$00,$40,$00,$00,$00,$50,$A0,$00,$50,$A0,$00,$00,$00,
 $40,$A0,$40,$00,$00,$00,$00,$00,$00,$00,$60,$60,$00,$00,$00,$00,
 $00,$00,$60,$00,$00,$00,$00,$00,$3F,$20,$A0,$40,$40,$00,$00,$00,
 $60,$50,$00,$00,$00,$00,$00,$00,$40,$20,$40,$60,$00,$00,$00,$00,
 $00,$60,$60,$60,$60,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00);
{ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß}
implementation
{ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß}
var
 mbk:array[0..sizeof(mys) shr 3-1,0..7] of byte;
{ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß}
procedure OutDxAx; assembler;
asm   {OutDxAx}
 out  dx,al
 inc  dx
 xchg al,ah
 out  dx,al
 dec  dx
 xchg al,ah
end;  {OutDxAx}
{ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß}
function  IsVga:boolean;assembler;
asm   {IsVga}
 mov  ax,1A00h
 int  10h
 cmp  al,1Ah
 jnz  @novga
 cmp  bl,7
 jz   @vga
 cmp  bl,8
 jz   @vga
@novga:
 xor  al,al
 jmp  @end
@vga:
 mov  al,1
@end:
end;  {IsVga}
{ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß}
procedure SetMode(n:word); assembler;
asm   {SetMode}
 mov  ax,n
 or   ah,ah
 jz   @1
 mov  bx,ax
 mov  ax,4F02h
@1:
 int  10h
end;  {SetMode}
{ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß}
procedure cls(n:byte; where:word); assembler;
asm   {cls}
 push es
 mov  es,where
 xor  di,di
 mov  al,n
 mov  ah,al
 mov  cx,ax
 db   66h;shl  ax,16
 mov  ax,cx
 mov  cx,4000h
 db   66h;rep  stosw
 pop  es
end;  {cls}
{ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß}
procedure pal(c,r,g,b:byte); assembler;
asm   {pal}
 mov  dx,03C8h
 mov  al,c
 out  dx,al
 inc  dx
 mov  al,r
 out  dx,al
 mov  al,g
 out  dx,al
 mov  al,b
 out  dx,al
end;  {pal}
{ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß}
procedure WaitForTrace; assembler;
asm   {WaitForTrace}
@1:
 mov  dx,03DAh
 in   al,dx
 test al,8
 jnz  @1
end;  {WaitForTrace}
{ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß}
procedure pset(x:word; y:byte; c:byte; where:word); assembler;
asm   {pset}
 push es
 cmp  where,0
 je   @end
 mov  es,where
 xor  al,al
 mov  ah,y
 mov  di,ax
 shr  ax,1
 shr  ax,1
 add  di,ax
 add  di,x
 mov  al,c
 mov  es:[di],al
@end:
 pop  es
end;  {pset}
{ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß}
procedure Quad(x:word; y:byte; w,h:word; c:byte; where:word); assembler;
asm   {Quad}
 push es
 cmp  h,0
 je   @end
 cmp  w,0
 je   @end
 cmp  where,0
 je   @end
 mov  es,where
 xor  al,al
 mov  ah,y
 mov  di,ax
 shr  ax,1
 shr  ax,1
 add  di,ax
 add  di,x
 mov  al,c
 mov  ah,al
 mov  si,ScrWidth
 sub  si,w
 mov  cx,h
@1:
 mov  dx,cx
 mov  cx,w
 shr  cx,1
 rep  stosw
 adc  cx,0
 rep  stosb
 add  di,si
 mov  cx,dx
 dec  cx
 jnz  @1
@end:
 pop  es
end;  {Quad}
{ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß}
procedure QuadP(x:word; y:byte; w,h:word; c:byte; where:word); assembler;
asm   {QuadP}
 push es
 cmp  h,0
 je   @end
 cmp  w,0
 je   @end
 cmp  where,0
 je   @end
 mov  es,where
 xor  al,al
 mov  ah,y
 mov  di,ax
 shr  ax,1
 shr  ax,1
 add  di,ax
 add  di,x
 mov  al,c
 mov  ah,al
 mov  si,ScrWidth
 sub  si,w
 mov  cx,h
@1:
 mov  dx,cx
 test dx,1
 jz   @2
 inc  di
@2:
 mov  cx,w
 shr  cx,1
@3:
 stosb
 inc  di
 dec  cx
 jnz  @3
 add  di,si
 test dx,1
 jz   @4
 dec  di
@4:
 mov  cx,dx
 dec  cx
 jnz  @1
@end:
 pop  es
end;  {QuadP}
{ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß}
procedure EdgeQuad(x:word; y:byte; w,h:word; c:byte; where:word); assembler;
asm   {EdgeQuad}
 push es
 cmp  h,0
 je   @end
 cmp  w,0
 je   @end
 cmp  where,0
 je   @end
 mov  es,where
 xor  al,al
 mov  ah,y
 mov  di,ax
 shr  ax,1
 shr  ax,1
 add  di,ax
 add  di,x
 mov  al,c
 mov  ah,al
 mov  si,ScrWidth
 dec  si
 mov  dx,di
 mov  cx,h
 dec  cx
@1:
 stosb
 add  di,si
 dec  cx
 jnz  @1
 mov  di,dx
 mov  cx,w
 dec  cx
 shr  cx,1
 rep  stosw
 adc  cx,0
 rep  stosb
 mov  cx,h
 dec  cx
@2:
 stosb
 add  di,si
 dec  cx
 jnz  @2
 sub  di,w
 inc  di
 mov  cx,w
 shr  cx,1
 rep  stosw
 adc  cx,0
 rep  stosb
@end:
 pop  es
end;  {EdgeQuad}
{ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß}
procedure EdgeQuadP(x:word; y:byte; w,h:word; c:byte; where:word); assembler;
asm   {EdgeQuadP}
 push es
 cmp  h,0
 je   @end
 cmp  w,0
 je   @end
 cmp  where,0
 je   @end
 mov  es,where
 xor  al,al
 mov  ah,y
 mov  di,ax
 shr  ax,1
 shr  ax,1
 add  di,ax
 add  di,x
 mov  al,c
 mov  si,ScrWidth
 shl  si,1
 dec  si
 mov  dx,di
 mov  cx,h
 inc  cx
 shr  cx,1
@1:
 stosb
 add  di,si
 dec  cx
 jnz  @1
 test h,1
 jz   @2
 sub  di,si
 inc  di
 mov  cx,w
 dec  cx
 shr  cx,1
 jmp  @3
@2:
 sub  di,ScrWidth
 inc  di
 mov  cx,w
 shr  cx,1
@3:
 stosb
 inc  di
 dec  cx
 jnz  @3
 mov  di,dx
 mov  cx,w
 inc  cx
 shr  cx,1
@4:
 stosb
 inc  di
 dec  cx
 jnz  @4
 dec  di
 test w,1
 jz   @5
 dec  di
 mov  cx,h
 shr  cx,1
 jmp  @6
@5:
 add  di,ScrWidth
 mov  cx,h
 dec  cx
 shr  cx,1
@6:
 stosb
 add  di,si
 dec  cx
 jnz  @6
@end:
 pop  es
end;  {EdgeQuadP}
{ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß}
procedure EdgeButt(x:word; y:byte; w,h:word; c1,c2:byte; where:word); assembler;
asm   {EdgeButt}
 push es
 cmp  h,0
 je   @end
 cmp  w,0
 je   @end
 cmp  where,0
 je   @end
 mov  es,where
 xor  al,al
 mov  ah,y
 mov  di,ax
 shr  ax,1
 shr  ax,1
 add  di,ax
 add  di,x
 mov  al,c1
 mov  ah,al
 mov  si,ScrWidth
 dec  si
 mov  dx,di
 mov  cx,h
 dec  cx
@1:
 stosb
 add  di,si
 dec  cx
 jnz  @1
 mov  di,dx
 mov  cx,w
 dec  cx
 shr  cx,1
 rep  stosw
 adc  cx,0
 rep  stosb
 mov  al,c2
 mov  ah,al
 mov  cx,h
 dec  cx
@2:
 stosb
 add  di,si
 dec  cx
 jnz  @2
 sub  di,w
 inc  di
 mov  cx,w
 shr  cx,1
 rep  stosw
 adc  cx,0
 rep  stosb
@end:
 pop  es
end;  {EdgeButt}
{ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß}
procedure Butt(x:word; y:byte; w,h:word; c1,c2,c3,t:byte; where:word);
var i:byte;
begin {Butt}
 for i:=0 to t-1 do
  edgebutt(x+i,y+i,w-i shl 1,h-i shl 1,c1,c3,where);
 quad(x+t,y+t,w-t shl 1,h-t shl 1,c2,where);
end;  {Butt}
{ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß}
function eitherB(cond:boolean; n1,n2:byte):byte; assembler;
asm   {eitherB}
 mov  al,n2
 test cond,0FFh
 jz   @1
 mov  al,n1
@1:
end;  {eitherB}
{ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß}
procedure fw8(s:string; x:word; y,c1,c2:byte; where:word);
var a,tx,ty:byte;
begin {fw8}
 if (where=0) or (s[0]<#1) then exit;
 if x=ScrWidth then x:=(ScrWidth-length(s) shl 3) shr 1;
 if c1=c2 then
  for a:=1 to length(s) do
   for ty:=0 to 7 do
    for tx:=0 to 7 do
     if font8[ord(s[a]) shl 3+ty] and ($80 shr tx)<>0
     then pset(x+(a-1) shl 3+tx,y+ty,c1,where)
     else
 else
  for a:=1 to length(s) do
   for ty:=0 to 7 do
    for tx:=0 to 7 do
     pset(x+(a-1) shl 3+tx,y+ty,eitherB(font8[ord(s[a]) shl 3+ty] and ($80 shr tx)=0,c2,c1),where);
end;  {fw8}
{ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß}
procedure fw4(s:string; x:word; y,c1,c2:byte; where:word);
var a,tx,ty:byte;
begin {fw4}
 if (where=0) or (s[0]<#1) then exit;
 if x=ScrWidth then x:=(ScrWidth-length(s) shl 3) shr 1;
 if c1=c2 then
  for a:=1 to length(s) do
   for ty:=0 to 7 do
    for tx:=0 to 7 do
     if font4[ord(s[a]) shl 3+ty] and ($80 shr tx)<>0
     then pset(x+(a-1) shl 2+tx,y+ty,c1,where)
     else
 else
  for a:=1 to length(s) do
   for ty:=0 to 7 do
    for tx:=0 to 7 do
     pset(x+(a-1) shl 2+tx,y+ty,eitherB(font4[ord(s[a]) shl 3+ty] and ($80 shr tx)=0,c2,c1),where);
end;  {fw4}
{ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß}
begin
end.  {unit volby1}
